@using System.Globalization;
@using Weather_Monitor.Models;
@model IEnumerable<WeatherData>
@{
    WeatherData data = new WeatherData();
    List<DateTime> days = new List<DateTime>();
    foreach (var item in Model)
    {
        days.Add(item.Date.Date);
    }
    days = days.Distinct().ToList();

    List<AverageTempPerDay> average = new();
    foreach (var day in days)
    {
        double avgIn = 0;
        double avgOut = 0;
        int count = 0;

        foreach (var measurement in Model)
        {
            if (day == measurement.Date.Date)
            {
                avgIn += measurement.InCelsius;
                avgOut += measurement.OutCelsius;
                count++;
            }
        }
        AverageTempPerDay a = new(day, avgIn / count, avgOut / count);
        average.Add(a);
    }
}


    <h2>Average temperature</h2>
<table class="table table-hover" style="width:100%">
    <thead>
        <tr class="table-light">
            <th>Day</th>
            <th>Average temperature inside (°C)</th>
            <th>Average temperature outside (°C)</th>
        </tr>

    </thead>
    <tbody>
        @foreach (var item in average)
        {

            <tr class="table-light">
                    <td>@item.Date.ToShortDateString()</td>
                    <td>@item.AverageTempInside</td>
                    <td>@item.AverageTempOutside</td>
                </tr>
        }
    </tbody>
</table>

<div id ="curve_chart" style="width: 900px; height: 500px; margin:auto;"></div>

<script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
    <script type="text/javascript">
    google.charts.load('current', { 'packages': ['corechart'] });
    google.charts.setOnLoadCallback(drawChart);

    function drawChart() {

        var data = new google.visualization.arrayToDataTable([
            ['Date', 'Outside temperature', 'Inside temperature'],
            @foreach (var item in average)
            {
        @Html.Raw($"[new Date({item.Date.Year}, {item.Date.Month-1}, {item.Date.Day}),   {item.AverageTempOutside.ToString(CultureInfo.InvariantCulture)},  {item.AverageTempInside.ToString(CultureInfo.InvariantCulture)}],")
        ;

            }
        ]);


          var options = {
            title: 'Average temperature (°C)',
            curveType: 'function',
            
        };

        var chart = new google.visualization.LineChart(document.getElementById('curve_chart'));

        chart.draw(data, options);
    }
    </script>



        